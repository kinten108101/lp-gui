#!/bin/bash


#TBA
# print odd/even pages only
# print n pages per side
# Choose ps 
# Setting files
#	Long binding edge, short binding edge support
#
#
#   Short binding edge: rotate 180 degrees for pass 2, -o orientation-requested=6
#
#
#
#	Print mechanism: send each page instead of one bulk, for better monitoring
#	Format: A4, A2, LETTER,...        -o media=size
#   N Copies: 
#	n pages per sheet: -o number-up={2|4|6|9|16}
#	Quality, best always: -o print-quality=5
#	Default maximum page (DONE
#
# BUG:
#	- filename with spaces error (Fixed by adding double quotes)
#   - can't check if file exists (Fixed by writing $HOME/.duplexpr instead of ~/.duplexpr)
#
# PLAN: 
#       BLUETOOTH FROM PHONE
#		LAN FROM PHONE (NPM APP)
#
#
#
title="Linux Print"
MenuOneText="Use default printing strategy of EPSON L3110"

config=".duplexpr"
configPref="Duplex Print"

position="--posx 600 --posy 300"
size="--width 500 --height 300"
opt="$position $size --on-top --fixed"
if [ -d "$HOME/$config" ]; then echo "Yes"; else echo "$configPref" > "$config"; fi

case "$1" in 
	-c|--cunt) echo "c"; shift;;
	-d|--dick) echo "d"; shift;;
esac



output=$(yad ${opt} --title "${title}" --form --field="Select file":FL --field="Start Page":CE --field="End Page":CE --text "${MenuOneText}")
[ $? -ne 0 ] && exit 1
file=$(cut -f1 -d'|' <<<${output})
echo -e "\n$0\n"
echo -e "\n$output\n"
echo -e "\n$file\n"
if [[ $file == "" ]]; then
	echo -e "Yes something is wrong"
fi
x=$(cut -f2 -d'|' <<<${output})
if [[ $x == "" ]] || [ $x < 1 ]; then
	x=1
fi
y=$(cut -f3 -d'|' <<<${output})
if [[ $y == "" ]]; then
	y=$(pdfinfo "$file")
	if [ $? -ne 0 ]; then
		yad ${opt} --text "Error: file could not by read by pdfinfo."
		exit 1
	else
		y=$(pdfinfo "$file" | sed -n 's/Pages//p' | sed 's/\://g' | sed 's/ //g')
	fi
elif [ $x >= $y ]; then
	# show a warning
	yad ${opt} --text "Failed page number"
fi


# max check
if [ $x < 1 ]; then
	x=1
fi

odd=""
even=""
range=$(seq $x $y)
if [ $? -ne 0 ]; then
	( yad ${opt} --text "Error: could not identify printing range." --button=gtk-ok:1; exit 1 )
else
	for number in $range
	do
		# echo $number
		if [ $((number % 2)) -eq 0 ]; then
			even="${even},${number}"
		else 
			odd="${odd},${number}" 
		fi
	done
fi
# purge, by cutting the first comma
odd=$(echo $odd | sed 's/,//')
even=$(echo $even | sed 's/,//')

yad $opt --title "Print Queue" --text "File:\t${file}\nPass 1:\t${odd}\nPass 2:\t${even}"\
 --button="Test":2 --button="Print":0 --button="Cancel":1
status=$?
if [ $status -eq 0 ]; then
	lp -P ${odd} "$file"
	yad ${opt}\
	 --text \
	 "Printing Pass 1 (odd)\n\
	 Once completed, rotate the processed sheets 180 degrees vertically, then reinsert them.\n\
	 Click OK to continue.\n\
	 You can cancel the print job from here if anything goes wrong, but this is not recommended."
	if [ $? -eq 0 ]; then
		lp -P ${even} "$file"
		yad ${opt} --text "Printing Pass 2 (odd).\n"
	else
	  	yad ${opt} --text "Pass 2 Canceled." --button=gtk-ok:0
	fi
elif [ $status -eq 2 ]; then
	page=$(cut -f1 -d',' <<< ${odd})
	lp -P ${page} "$file"
	yad ${opt} --text "Printing one page of Pass 1. \nOnce completed, rotate the processed sheets 180 degrees vertically, then reinsert them.\nClick OK to continue."
	if [ $? -eq 0 ]; then
		page=$(cut -f1 -d',' <<< ${even})
		lp -P ${page} "$file"
	else
		yad ${opt} --text "An error occurred." --button=gtk-ok:0
	fi
else
exit 0
fi